{
  "name": "ble-ad-parser",
  "version": "0.0.4",
  "description": "Parse Bluetooth Low Energy peripheral advertising packets",
  "keywords": [
    "bluetooth",
    "low",
    "energy",
    "packet",
    "advertise",
    "parse"
  ],
  "main": "index.js",
  "devDependencies": {
    "mocha": "*",
    "chai": "*"
  },
  "author": {
    "name": "Jon McKay",
    "email": "jon@technical.io"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "directories": {
    "lib": "libraries",
    "test": "Testing"
  },
  "readme": "# ble-ad-parser\n\n## Description\nThis package will parse BLE slave advertisement packets into human readable/manipulatable objects. Based off of the BLE specification [data types](https://www.bluetooth.org/en-us/specification/assigned-numbers/generic-access-profile).\n## Install\n```\nnpm install ble-ad-parser\n```\n\n## Usage\n\n```\nvar parser = require('ble-ad-parser');\n\n// Payload from your BLE device (make it into a buffer, if not already)\n\nvar payload = new Buffer([27, 2, 1, 6, 17, 6, 186, 86, 137, 166, 250, 191, 162, 189, 1, 70, 125, 110, 56, 88, 171, 173, 5, 22, 10, 24, 7, 4]);\n\n// Parse (little-endian by default)\nvar packets = parser.parse(payload);\n\n// \n\nconsole.log(packets.length); // 3\nconsole.log(packets[0].type); // Flags\nconsole.log(packets[0].data); //  [ 'LE Limited Discoverable Mode' ]\n\nconsole.log(packets[1].type); // 'Incomplete List of 128-bit Service Class UUIDs'\nconsole.log(packets[1].data); // [ '0xba5689a6fabfa2bd01467d6e3858abad' ] \n```\n\n## Packet Structure\nThe returned packets in the packet array have the following structure:\n\n*packet*.type -> A string describing type of data (eg. \"Flags\", \"Complete List of 16-bit UUIDs\", etc.)\n\n*packet*.data -> The data parsed into appropriate data type (eg. String, Array of Octet Strings, unsigned int, etc.)\n\n*packet*.typeFlag -> the type flag parsed from packet\n\n*packet*.raw -> The raw buffer that was parsed\n\n## Endianness\n\nYou can specify the endianess that you want the buffers parsed with by using these functions:\n```\nparser.parseLE(buffer);\nparse.parseBE(buffer);\n```\n\n## License\nMIT\n\n\n\n\n\n\n\n",
  "_id": "ble-ad-parser@0.0.4",
  "_from": "ble-ad-parser@*"
}
